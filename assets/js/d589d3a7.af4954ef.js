"use strict";(self.webpackChunkr_row_doc=self.webpackChunkr_row_doc||[]).push([[7162],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},g=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,d=u["".concat(i,".").concat(g)]||u[g]||m[g]||o;return n?a.createElement(d,s(s({ref:t},p),{},{components:n})):a.createElement(d,s({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=g;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[u]="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={id:"Getting Started",slug:"getting-started"},s=void 0,l={unversionedId:"Getting Started",id:"Getting Started",title:"Getting Started",description:"Create a Game",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/r-row-doc/getting-started",draft:!1,tags:[],version:"current",frontMatter:{id:"Getting Started",slug:"getting-started"},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/r-row-doc/installation/"},next:{title:"ButtonOptions",permalink:"/r-row-doc/interface/button-options"}},i={},c=[{value:"Create a Game",id:"create-a-game",level:2},{value:"Create Canvas",id:"create-canvas",level:2},{value:"Set scene to start with the game (facultative)",id:"set-scene-to-start-with-the-game-facultative",level:2},{value:"Start the game",id:"start-the-game",level:2},{value:"Resume",id:"resume",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"create-a-game"},"Create a Game"),(0,r.kt)("p",null,"Create a game:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Game } from 'r-row';\n\nconst game = new Game();\n")),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"create-canvas"},"Create Canvas"),(0,r.kt)("p",null,"You can use default canvas options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"game.createCanvas();\n")),(0,r.kt)("br",null),(0,r.kt)("p",null,"Or create a Canvas settings object from ",(0,r.kt)("inlineCode",{parentName:"p"},"CanvasOption")," interface:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { CanvasOptions } from 'r-row';\n\nconst options: CanvasOptions = {\n  // your settings here\n};\n")),(0,r.kt)("p",null,"and pass it to the ",(0,r.kt)("inlineCode",{parentName:"p"},"createCanvas")," method:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"game.createCanvas(options);\n")),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"set-scene-to-start-with-the-game-facultative"},"Set scene to start with the game (facultative)"),(0,r.kt)("p",null,"If you want use the Scenes system provided by R-Row, you can use this method before starting the game:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"game.startScene(new MySceneClass());\n")),(0,r.kt)("p",null,"A new instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"MySceneClass")," will be start automatically when the game start."),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"start-the-game"},"Start the game"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"game.start();\n")),(0,r.kt)("h2",{id:"resume"},"Resume"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { CanvasOption, Game } from 'r-row';\nimport { MyScene } from './scenes/MyScene';\n\nconst option: CanvasOptions = {\n  imageSmoothingEnabled: false;\n}\n\nconst game = new Game()\n  .createCanvas(options)\n  .startScene(new MyScene())\n  .start();\n")))}m.isMDXComponent=!0}}]);