"use strict";(self.webpackChunkr_row_doc=self.webpackChunkr_row_doc||[]).push([[3246],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,f=u["".concat(c,".").concat(m)]||u[m]||s[m]||l;return n?a.createElement(f,i(i({ref:t},d),{},{components:n})):a.createElement(f,i({ref:t},d))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1223:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={id:"Scene",slug:"scene"},i=void 0,o={unversionedId:"interface/Scene",id:"interface/Scene",title:"Scene",description:"The Scene interface represents a scene in the game. A scene typically contains game objects and manages their lifecycle.",source:"@site/docs/interface/scene.md",sourceDirName:"interface",slug:"/interface/scene",permalink:"/r-row-doc/interface/scene",draft:!1,tags:[],version:"current",frontMatter:{id:"Scene",slug:"scene"},sidebar:"tutorialSidebar",previous:{title:"RectangleOptions",permalink:"/r-row-doc/interface/rectangle-options"},next:{title:"Updatable",permalink:"/r-row-doc/interface/updatable"}},c={},p=[{value:"Definition",id:"definition",level:2},{value:"Methods",id:"methods",level:2},{value:"load",id:"load",level:3},{value:"unload",id:"unload",level:3},{value:"update",id:"update",level:3},{value:"draw",id:"draw",level:3}],d={toc:p},u="wrapper";function s(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"Scene")," interface represents a scene in the game. A scene typically contains game objects and manages their lifecycle."),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"definition"},"Definition"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"interface Scene {\n  load(data?: any): void;\n  unload(): void;\n  update(deltaTime: number): void;\n  draw(context: CanvasRenderingContext2D)\n}\n")),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"load"},"load"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"data")," (optional)",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Type: ",(0,r.kt)("inlineCode",{parentName:"li"},"any")))))),(0,r.kt)("li",{parentName:"ul"},"Return type: ",(0,r.kt)("inlineCode",{parentName:"li"},"void"))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"load")," method is called when the scene is loaded. It is responsible for initializing the scene and its game objects."),(0,r.kt)("h3",{id:"unload"},"unload"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Return type: ",(0,r.kt)("inlineCode",{parentName:"li"},"void"))),(0,r.kt)("p",null,"The unload method is called when the scene is unloaded. It is responsible for cleaning up resources and releasing memory used by the scene and its game objects."),(0,r.kt)("h3",{id:"update"},"update"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"deltaTime"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Type: ",(0,r.kt)("inlineCode",{parentName:"li"},"number")))))),(0,r.kt)("li",{parentName:"ul"},"Return type: ",(0,r.kt)("inlineCode",{parentName:"li"},"void"))),(0,r.kt)("p",null,"The method to update the state of a scene, called once per frame. ",(0,r.kt)("inlineCode",{parentName:"p"},"deltaTime")," is the time elapsed since the last frame."),(0,r.kt)("h3",{id:"draw"},"draw"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Parameters:",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Type: ",(0,r.kt)("inlineCode",{parentName:"li"},"CanvasRenderingContext2D")))))),(0,r.kt)("li",{parentName:"ul"},"Return type: ",(0,r.kt)("inlineCode",{parentName:"li"},"void"))),(0,r.kt)("p",null,"The method to draw the scene on the given 2D rendering context."))}s.isMDXComponent=!0}}]);